# Generated by Django 4.1 on 2024-03-26 23:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0005_project"),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("details", models.CharField(max_length=255)),
                ("notes", models.TextField(blank=True)),
                (
                    "urgency",
                    models.CharField(
                        choices=[
                            ("1", "Immediate"),
                            ("2", "Day End"),
                            ("3", "Week End"),
                            ("4", "Month End"),
                            ("5", "No Deadline"),
                        ],
                        default="5",
                        max_length=20,
                    ),
                ),
                (
                    "business_value",
                    models.PositiveSmallIntegerField(
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                        ],
                        default=5,
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                        ],
                        default=5,
                    ),
                ),
                ("favorite", models.BooleanField(default=False)),
                ("is_added_to_my_day", models.BooleanField(default=False)),
                ("closed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "task_completion_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("skipped", "Skipped"),
                            ("done", "Done"),
                            ("parked", "Parked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("due_date_time", models.DateTimeField(blank=True, null=True)),
                (
                    "planned_time_in_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "planned_start_date_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "planned_start_date_calculation_type",
                    models.CharField(
                        choices=[
                            ("fixed_date", "Fixed Date"),
                            ("dependent_date", "Dependent Date"),
                        ],
                        default="fixed_date",
                        max_length=20,
                    ),
                ),
                ("close_task_after", models.DurationField(blank=True, null=True)),
                (
                    "progress_status_on_closure",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending"),
                            ("skipped", "Skipped"),
                            ("done", "Done"),
                            ("parked", "Parked"),
                        ],
                        default="Parked",
                        max_length=255,
                    ),
                ),
                (
                    "post_actions_on_closure",
                    models.CharField(
                        blank=True,
                        choices=[("new_task", "Create a new task")],
                        default="new_task",
                        max_length=255,
                    ),
                ),
                (
                    "repeat_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.category",
                    ),
                ),
                (
                    "dependent_on_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dependent_tasks",
                        to="task_management.task",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.project",
                    ),
                ),
                (
                    "to_be_completed_before_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subsequent_tasks",
                        to="task_management.task",
                    ),
                ),
            ],
        ),
    ]
